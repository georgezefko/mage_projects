name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main
      - 'release/*'

env:
  DOCKER_REPO: zefko/mage_projects  # Define your Docker Hub repository name here

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.parse_version.outputs.image_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        with:
          semantic_version: 17
          extra_plugins: |
            @semantic-release/changelog@5
            @semantic-release/git@9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log Semantic Release Output (Debugging)
        run: echo "Semantic version: ${{ steps.semantic.outputs.next_release_version }}"

      - name: Parse version
        id: parse_version
        run: |
          VERSION=${{ steps.semantic.outputs.next_release_version }}
          if [ -z "$VERSION" ]; then
            echo "Error: Semantic Release did not produce a version." >&2
            exit 1
          fi
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "image_tag=v${VERSION}" >> $GITHUB_ENV
            echo "::set-output name=image_tag::v${VERSION}"
          else
            echo "image_tag=pre-${VERSION}" >> $GITHUB_ENV
            echo "::set-output name=image_tag::pre-${VERSION}"
          fi

      - name: Log semantic version
        run: echo "Determined version: ${{ steps.parse_version.outputs.image_tag }}"

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log into Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_REPO }}:${{ needs.build.outputs.image_tag }} .

      - name: Push Docker image
        run: |
          docker push ${{ env.DOCKER_REPO }}:${{ needs.build.outputs.image_tag }}
