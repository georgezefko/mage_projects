# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main
#       - 'release/*'

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
#     if: github.event_name != 'pull_request'

#     env:
#       DOCKERHUB_REPO: zefko/mage_projects 

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '18.15'

#       - name: Release Setup
#         run: |
#           npx -y -p @semantic-release/git -p @semantic-release/changelog -p @semantic-release/exec -p semantic-release@19 semantic-release
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#       - name: Set Release Variable
#         id: set_release
#         run: |
#           if [ -f /tmp/version ]; then
#             RELEASE=$(cat /tmp/version | tr -d '[:space:]')
#           else
#             RELEASE=${{ github.run_number }}
#           fi
#           echo "RELEASE=$RELEASE" >> $GITHUB_ENV
#           echo "This is your release tag! $RELEASE"
      
#       - name: Debug Variables
#         run: |
#           echo "DOCKERHUB_REPO: '$DOCKERHUB_REPO'"
#           echo "RELEASE: '$RELEASE'"

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_PASSWORD }}

#       - name: Build and Push Docker Image
#         run: |
#           docker build -t $DOCKERHUB_REPO:${RELEASE} .
#           docker push $DOCKERHUB_REPO:${RELEASE}

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - 'release/*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_REPO: mage_projects  # Replace with your Docker Hub repo name
      IMAGE_NAME: mage_projects  # Use the same image name for GHCR
      REGISTRY: ghcr.io
      IMAGE_URL: ${{ github.repository }}  # This will be in the format 'username/repo'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.15'

      - name: Release Setup
        run: |
          npx -y -p @semantic-release/git \
                 -p @semantic-release/changelog \
                 -p @semantic-release/exec \
                 -p semantic-release@19 \
                 semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Release Variable
        id: set_release
        run: |
          if [ -f /tmp/version ]; then
            RELEASE=$(cat /tmp/version | tr -d '[:space:]')
          else
            RELEASE=${{ github.run_number }}
          fi
          echo "RELEASE=$RELEASE" >> $GITHUB_ENV
          echo "This is your release tag! $RELEASE"

      - name: Debug Variables
        run: |
          echo "DOCKERHUB_USERNAME: '$DOCKERHUB_USERNAME'"
          echo "DOCKERHUB_REPO: '$DOCKERHUB_REPO'"
          echo "RELEASE: '$RELEASE'"
          echo "IMAGE_URL: '$IMAGE_URL'"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          # Build the Docker image
          docker build -t $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:${RELEASE} .

          # Tag the image for GitHub Container Registry
          docker tag $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:${RELEASE} ${{ env.REGISTRY }}/${{ env.IMAGE_URL }}:${RELEASE}

      - name: Push Docker Image to Docker Hub
        run: |
          docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:${RELEASE}

      - name: Push Docker Image to GitHub Container Registry
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_URL }}:${RELEASE}
